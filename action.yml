name: Tox Run
description: >-
  Runs 'tox -e' on your repository and sets the output to a JSON list of environments
inputs:
  tox-env:
    descrition: Tox environment to run
    required: true
  tox-args:
    description: Additional arguments to tox
    required: true
    default: ''
runs:
  using: composite
  steps:
    - name: Detect tox version based on factors
      id: version
      shell: python
      run: |
        import re

        env = "${{ intputs.tox-env }}"
        factors = env.split("-")
        pyf = re.compile(r'(?P<pypy>py)?py(?P<version>\d+)')
        pyfactors = [pyf.match(f) for f in factors if pyf.match(f) is not None]
        if len(pyfactors) == 0:
          print("::set-output name=version::3.x")
        else:
          factor = pyfactors[0]
        # Detect if pypy is part of the version we're doing
        if factor.group('pypy') is not None:
          version = 'pypy-'
        else:
          version = ''
        # Set the version itself
        factor_version = factor.group('version')
        if len(factor_version) == 1:
          version += factor_version + '.x'
        else:
          version += factor_version[0] + '.' + factor_version[1:]
        print("::setoutput name=version::" + version)
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ steps.version.outputs.version }}
    - name: Run tox with args and get output
      shell: bash
      run: tox -e ${{ inputs.tox-env }} ${{ inputs.tox-args }}
